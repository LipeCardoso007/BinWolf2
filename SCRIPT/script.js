// üëâ Fun√ß√£o que alterna a visibilidade do submenu ao clicar no bot√£o "LOGIN"
function trocarbutao() {
  const menu = document.getElementById("submenuheader");

  // Se o menu j√° estiver vis√≠vel (display flex), ele ser√° escondido
  if (menu.style.display === "flex") {
    menu.style.display = "none"; // esconde o menu
  } else {
    menu.style.display = "flex"; // mostra o menu
  }
}

// üëâ Fecha o menu e remove borda se o usu√°rio clicar fora dele
document.addEventListener("click", function (event) {
  const menu = document.getElementById("submenuheader");
  const botao = document.getElementById("submenu2");

  // Se o clique N√ÉO foi dentro do menu e nem no bot√£o
  if (!menu.contains(event.target) && !botao.contains(event.target)) {
    menu.style.display = "none";               // esconde o menu
    botao.classList.remove("ativo");           // remove a borda vermelha do bot√£o (se estiver ativa)
  }
});

// üëâ Adiciona/remover classe 'ativo' em todos os bot√µes com a classe .bntheader
document.querySelectorAll('.bntheader').forEach(botao => {
  botao.addEventListener('click', () => {
    botao.classList.toggle('ativo'); // ativa ou desativa a borda (classe .ativo)
  });
});

// üëâ Fun√ß√£o gen√©rica para ativar ou desativar um bot√£o passado como par√¢metro
function ativarBotao(botao) {
  if (botao.classList.contains("ativo")) {
    botao.classList.remove("ativo"); // se j√° estiver ativo, desativa
  } else {
    botao.classList.add("ativo");    // se n√£o estiver ativo, ativa
  }
}

// üëâ Detecta cliques fora de QUALQUER bot√£o .bntheader para desativar
document.addEventListener("click", function(event) {
  const botoes = document.querySelectorAll(".bntheader");

  botoes.forEach((btn) => {
    // Se o clique for fora do bot√£o, remove a classe 'ativo'
    if (!btn.contains(event.target)) {
      btn.classList.remove("ativo");
    }
  });
});
